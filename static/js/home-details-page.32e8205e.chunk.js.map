{"version":3,"sources":["services/apiService.js","components/Cast.js","components/Reviews.js","components/MovieCard.js","pages/MovieDetailsPage.js"],"names":["BASE_URL","MY_KEY","IMG_URL","defaultImage","themoviedbAPI","fetchTrendingMovies","url","fetch","then","response","ok","json","data","results","filter","movieArray","media_type","Promise","reject","Error","fetchMovieDetails","movieId","res","fetchCast","fetchReviews","Cast","state","cast","error","a","console","log","this","props","match","params","Axios","get","finally","window","scrollTo","top","document","documentElement","scrollHeight","behavior","setState","className","length","map","name","profile_path","character","cast_id","src","alt","Component","MovieReview","reviews","catch","toast","message","id","author","content","MovieCard","movie","backdrop_path","genres","overview","release_date","title","vote_average","defaultProps","PropTypes","shape","string","MovieDetailsPage","loading","handleGoBack","location","history","push","from","routes","movies","Number","type","onClick","exact","to","activeClassName","path","render","component","Reviews"],"mappings":"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","file":"static/js/home-details-page.32e8205e.chunk.js","sourcesContent":["const BASE_URL = `https://api.themoviedb.org/3/`;\nconst MY_KEY = `66acb4573ba980ae8ac5981a52e8de6b`;\nconst imgSize = 'w500';\nconst IMG_URL = `https://image.tmdb.org/t/p/${imgSize}/`;\nconst defaultImage = `${IMG_URL}wwemzKWzjKYJFfCeiB57q3r4Bcm.png`;\n// const APIaccessKeyV4auth = `eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NmFjYjQ1NzNiYTk4MGFlOGFjNTk4MWE1MmU4ZGU2YiIsInN1YiI6IjYwMjY5MjZiZDZjMzAwMDA0MTcwYjQ1OSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VfVRytfR82QgUddj6bVVXNcEbxcj7_D2z_leUhvgTds`;\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\n// ?_embed=credits\nexport function fetchTrendingMovies() {\n  const url = `${BASE_URL}trending/all/day?api_key=${MY_KEY}`;\n  // const url = `${BASE_URL}/?q=${query}&page=${page}&key=${MY_KEY}&image_type_type=photo&orientation=horizontal&per_page=${PER_PAGE}`;\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response\n        .json()\n        .then(data => data.results)\n        .then(results =>\n          results.filter(movieArray => movieArray.media_type === 'movie'),\n        );\n    }\n    return Promise.reject(new Error('Trending movies not found!'));\n  });\n}\n\nfunction fetchMovieDetails(movieId) {\n  return fetch(\n    `${BASE_URL}movie/${movieId}?api_key=${MY_KEY}&language=en-US`,\n  ).then(res => res.json());\n}\n\nfunction fetchCast(movieId) {\n  return fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${MY_KEY}&language=en-US`,\n  ).then(res => res.json());\n}\n\nfunction fetchReviews(movieId) {\n  return fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${MY_KEY}&language=en-US&page=1`,\n  )\n    .then(res => res.json())\n    .then(data => data.results);\n}\n\nconst themoviedbAPI = {\n  fetchTrendingMovies,\n  fetchMovieDetails,\n  MY_KEY,\n  BASE_URL,\n  defaultImage,\n  IMG_URL,\n  fetchCast,\n  fetchReviews,\n};\n\nexport default themoviedbAPI;\n","import React, { Component } from 'react';\r\nimport themoviedbAPI from '../services/apiService';\r\nimport Axios from 'axios';\r\nimport './Cast.css';\r\n// import { toast } from 'react-toastify';\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    cast: [],\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    console.log('componentDidMount');\r\n    const { movieId } = this.props.match.params;\r\n    // const { movieId } = Number(this.props.match.params.movieId);\r\n    console.log('from Cast movieId:', movieId);\r\n    // console.log(this.state.cast);\r\n\r\n    const response = await Axios.get(\r\n      `${themoviedbAPI.BASE_URL}movie/${movieId}/credits?api_key=${themoviedbAPI.MY_KEY}&language=en-US`,\r\n    ).finally(() => {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    });\r\n    this.setState({ ...response.data });\r\n    console.log(this.state.cast);\r\n    //==============\r\n    // themoviedbAPI\r\n    //   .fetchCast(movieId)\r\n    //   .then(results => this.setState({ cast: results.cast }))\r\n    //   .catch(error => {\r\n    //     toast.error(error.message);\r\n    //     this.setState({ error: error.message });\r\n    //   })\r\n    //   .finally(() => {\r\n    //     window.scrollTo({\r\n    //       top: document.documentElement.scrollHeight,\r\n    //       behavior: 'smooth',\r\n    //     });\r\n    //   });\r\n  }\r\n\r\n  // async componentDidUpdate(prevProps, prevState) {\r\n  //   console.log('componentDidUpdate');\r\n  //   const { movieId } = this.props.match.params;\r\n  //   console.log(movieId);\r\n\r\n  //   const response = await Axios.get(\r\n  //     `${themoviedbAPI.BASE_URL}movie/${movieId}/credits?api_key=${themoviedbAPI.MY_KEY}&language=en-US`,\r\n  //   ).finally(() => {\r\n  //     window.scrollTo({\r\n  //       top: document.documentElement.scrollHeight,\r\n  //       behavior: 'smooth',\r\n  //     });\r\n  //   });\r\n  //   this.setState({ ...response.data });\r\n  //   console.log(this.state.cast);\r\n  // }\r\n\r\n  render() {\r\n    const { cast } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <ul className=\"CastGallery\">\r\n          {cast.length > 0 ? (\r\n            cast.map(({ name, profile_path, character, cast_id }) => (\r\n              <li className=\"ImageGalleryItem\" key={cast_id}>\r\n                <img\r\n                  src={\r\n                    profile_path\r\n                      ? `${themoviedbAPI.IMG_URL}${profile_path}`\r\n                      : `${themoviedbAPI.defaultImage}`\r\n                  }\r\n                  alt={name}\r\n                />\r\n                <p>{name}</p>\r\n                <p>Character: {character}</p>\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <p>We don't have any cast for this movie</p>\r\n          )}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cast;\r\n","import React, { Component } from 'react';\r\nimport themoviedbAPI from '../services/apiService';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class MovieReview extends Component {\r\n  state = {\r\n    reviews: [],\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    themoviedbAPI\r\n      .fetchReviews(movieId)\r\n      .then(reviews => this.setState({ reviews }))\r\n      .catch(error => {\r\n        toast.error(error.message);\r\n        this.setState({ error: error.message });\r\n      })\r\n      .finally(() => {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <h1>uyguguy</h1>\r\n        <ul>\r\n          {reviews.length !== 0 ? (\r\n            reviews.map(({ id, author, content }) => (\r\n              <li key={id}>\r\n                <h2>{author}</h2>\r\n                <p>{content}</p>\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <p>We don't have any reviews for this movie</p>\r\n          )}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport themoviedbAPI from '../services/apiService';\r\n// import './MovieCard.scss';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  const {\r\n    backdrop_path,\r\n    genres,\r\n    overview,\r\n    release_date,\r\n    title,\r\n    name,\r\n    vote_average,\r\n  } = movie;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Card Container\">\r\n        <img\r\n          src={\r\n            backdrop_path\r\n              ? `${themoviedbAPI.IMG_URL}${backdrop_path}`\r\n              : `${themoviedbAPI.defaultImage}`\r\n          }\r\n          alt={title || name}\r\n        />\r\n\r\n        <div className=\"CardInfo\">\r\n          <h1>{title || name}</h1>\r\n          {vote_average > 0 && (\r\n            <p>\r\n              <span className=\"Title\">User Score: </span>\r\n              {vote_average * 10}%\r\n            </p>\r\n          )}\r\n\r\n          {release_date && (\r\n            <p>\r\n              <span className=\"Title\">Release date: </span>\r\n              {release_date}\r\n            </p>\r\n          )}\r\n          {overview && (\r\n            <>\r\n              <h2>Overview</h2>\r\n              <p>{overview}</p>\r\n            </>\r\n          )}\r\n\r\n          {genres !== null && (\r\n            <>\r\n              <h2>Genres</h2>\r\n              <ul className=\"Genres\">\r\n                {genres.map(({ id, name }) => (\r\n                  <li key={id} className=\"GenresItem\">\r\n                    {name}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  movie: PropTypes.shape({\r\n    backdrop_path: themoviedbAPI.defaultImage.string,\r\n  }),\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  movie: PropTypes.shape({\r\n    backdrop_path: PropTypes.string,\r\n    genres: PropTypes.array,\r\n    overview: PropTypes.string,\r\n    release_date: PropTypes.string,\r\n    title: PropTypes.string,\r\n    vote_average: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { Component } from 'react';\r\nimport { Route, NavLink, Switch } from 'react-router-dom';\r\nimport Cast from '../components/Cast';\r\nimport Reviews from '../components/Reviews';\r\nimport MovieCard from '../components/MovieCard';\r\nimport themoviedbAPI from '../services/apiService';\r\n// import Axios from 'axios';\r\nimport routes from '../routes';\r\n// import { MY_KEY, BASE_URL } from '../services/apiService';\r\n// import Spinner from '../components/Spinner/Spinner';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    // backdrop_path: '',\r\n    // genres: [],\r\n    // overview: '',\r\n    // release_date: '',\r\n    // title: '',\r\n    // name: '',\r\n    // vote_average: null,\r\n    movie: null,\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loading: true });\r\n    console.log(Number(this.props.match.params.movieId));\r\n\r\n    const { movieId } = this.props.match.params;\r\n\r\n    // const response = await Axios.get(\r\n    //   `${themoviedbAPI.BASE_URL}movie/${movieId}?api_key=${themoviedbAPI.MY_KEY}&language=en-US`,\r\n    // )\r\n    themoviedbAPI\r\n      .fetchMovieDetails(movieId)\r\n      .then(movie => this.setState({ movie }))\r\n      .catch(error => {\r\n        toast.error(error.message);\r\n        this.setState({ error: error.message });\r\n      })\r\n      .finally(() => this.setState({ loading: false }));\r\n    console.log(this.state);\r\n  }\r\n\r\n  handleGoBack = () => {\r\n    const { location, history } = this.props;\r\n    history.push(location?.state?.from || routes.movies);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      // backdrop_path,\r\n      // genres,\r\n      // overview,\r\n      // release_date,\r\n      // title,\r\n      // name,\r\n      // vote_average,\r\n      movie,\r\n      // loading,\r\n      // error,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"BackButton Button\"\r\n            onClick={this.handleGoBack}\r\n          >\r\n            Back\r\n          </button>\r\n\r\n          {this.state.movie && <MovieCard movie={movie} />}\r\n\r\n          <ul>\r\n            <li>\r\n              <NavLink\r\n                exact\r\n                to={`${this.props.match.url}/cast`}\r\n                className=\"NavLink\"\r\n                activeClassName=\"NavLink--active\"\r\n              >\r\n                Cast------\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                exact\r\n                // to=\"/movies/:movieId/reviews\"\r\n                to={`${this.props.match.path}/reviews`}\r\n                className=\"NavLink\"\r\n                activeClassName=\"NavLink--active\"\r\n              >\r\n                Reviews-----\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n\r\n          <Switch>\r\n            {/* <Route path=\"/movies/:movieId/cast\" component={Cast} /> */}\r\n            <Route\r\n              path={`${this.props.match.path}/cast`}\r\n              render={props => {\r\n                console.log(props);\r\n                const movieId = Number(props.match.params.movieId);\r\n                console.log(movieId);\r\n                return <Cast {...props} movieId={movieId} />;\r\n              }}\r\n            />\r\n            {/* <Route path=\"/movies/:movieId/reviews\" component={Reviews} /> */}\r\n            <Route\r\n              path={`${this.props.match.path}/reviews`}\r\n              component={Reviews}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}