{"version":3,"sources":["services/apiService.js","components/Spinner/Spinner.js","pages/HomePage.js","pages/MoviesPage.js","components/Cast.js","components/Reviews.js","pages/MovieDetailsPage.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","MY_KEY","IMG_URL","defaultImage","themoviedbAPI","fetchTrendingMovies","url","fetch","then","response","ok","json","data","results","filter","movieArray","media_type","Promise","reject","Error","fetchCast","movieId","res","fetchReviews","Spinner","type","color","height","width","timeout","HomePage","state","movies","loading","error","a","this","setState","catch","toast","message","finally","map","movie","to","id","title","Component","MoviesPage","Cast","cast","props","match","params","console","log","Axios","get","window","scrollTo","top","document","documentElement","scrollHeight","behavior","className","length","name","profile_path","character","cast_id","src","alt","Reviews","MovieDetailsPage","backdrop_path","genres","overview","release_date","vote_average","Number","exact","activeClassName","path","render","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f88bebbe.chunk.js","sourcesContent":["const BASE_URL = `https://api.themoviedb.org/3/`;\nconst MY_KEY = `66acb4573ba980ae8ac5981a52e8de6b`;\nconst imgSize = 'w500';\nconst IMG_URL = `https://image.tmdb.org/t/p/${imgSize}/`;\nconst defaultImage = `${IMG_URL}wwemzKWzjKYJFfCeiB57q3r4Bcm.png`;\n// const APIaccessKeyV4auth = `eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NmFjYjQ1NzNiYTk4MGFlOGFjNTk4MWE1MmU4ZGU2YiIsInN1YiI6IjYwMjY5MjZiZDZjMzAwMDA0MTcwYjQ1OSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VfVRytfR82QgUddj6bVVXNcEbxcj7_D2z_leUhvgTds`;\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\n// ?_embed=credits\nexport function fetchTrendingMovies() {\n  const url = `${BASE_URL}trending/all/day?api_key=${MY_KEY}`;\n  // const url = `${BASE_URL}/?q=${query}&page=${page}&key=${MY_KEY}&image_type_type=photo&orientation=horizontal&per_page=${PER_PAGE}`;\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response\n        .json()\n        .then(data => data.results)\n        .then(results =>\n          results.filter(movieArray => movieArray.media_type === 'movie'),\n        );\n    }\n    return Promise.reject(new Error('Trending movies not found!'));\n  });\n}\n\nfunction fetchCast(movieId) {\n  return fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${MY_KEY}&language=en-US`,\n  ).then(res => res.json());\n}\n\nfunction fetchReviews(movieId) {\n  return fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${MY_KEY}&language=en-US&page=1`,\n  )\n    .then(res => res.json())\n    .then(data => data.results);\n}\n\nconst themoviedbAPI = {\n  fetchTrendingMovies,\n  MY_KEY,\n  BASE_URL,\n  defaultImage,\n  IMG_URL,\n  fetchCast,\n  fetchReviews,\n};\n\nexport default themoviedbAPI;\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Spinner = () => (\r\n  <Loader type=\"Oval\" color=\"#00BFFF\" height={300} width={300} timeout={2500} />\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\n// import Axios from 'axios';\r\nimport themoviedbAPI from '../services/apiService';\r\nimport Spinner from '../components/Spinner/Spinner';\r\nimport { toast } from 'react-toastify';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// https://developers.themoviedb.org/3/trending/get-trending\r\n\r\nexport class HomePage extends Component {\r\n  state = {\r\n    movies: [],\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loading: true });\r\n    themoviedbAPI\r\n      .fetchTrendingMovies()\r\n      .then(movieArray => this.setState({ movies: movieArray }))\r\n      .catch(error => {\r\n        toast.error(error.message);\r\n        this.setState({ error: error.message });\r\n      })\r\n      .finally(() => this.setState({ loading: false }));\r\n    // Axios.get('\r\n    // https://api.themoviedb.org/3/trending/all/day?api_key=66acb4573ba980ae8ac5981a52e8de6b');\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.match.url);\r\n    const { movies, loading } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Trending today</h1>\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <ul>\r\n            {movies.map(movie => (\r\n              <li key={movie.id}>\r\n                {/* <Link to={`${this.props.match.url}${movie.id}`}>\r\n                  {movie.title}\r\n                </Link> */}\r\n                <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nconst MoviesPage = () => {\r\n  return <h1>Movies Page</h1>;\r\n};\r\n\r\nexport default MoviesPage;\r\n","import React, { Component } from 'react';\r\nimport themoviedbAPI from '../services/apiService';\r\nimport Axios from 'axios';\r\nimport './Cast.css';\r\n// import { toast } from 'react-toastify';\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    cast: [],\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    // const { movieId } = Number(this.props.match.params);\r\n    console.log(movieId);\r\n    // console.log(this.state.cast);\r\n\r\n    const response = await Axios.get(\r\n      `${themoviedbAPI.BASE_URL}movie/${movieId}/credits?api_key=${themoviedbAPI.MY_KEY}&language=en-US`,\r\n    ).finally(() => {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    });\r\n    this.setState({ ...response.data });\r\n    console.log(this.state.cast);\r\n    //==============\r\n    // themoviedbAPI\r\n    //   .fetchCast(movieId)\r\n    //   .then(results => this.setState({ cast: results.cast }))\r\n    //   .catch(error => {\r\n    //     toast.error(error.message);\r\n    //     this.setState({ error: error.message });\r\n    //   })\r\n    //   .finally(() => {\r\n    //     window.scrollTo({\r\n    //       top: document.documentElement.scrollHeight,\r\n    //       behavior: 'smooth',\r\n    //     });\r\n    //   });\r\n  }\r\n\r\n  // async componentDidUpdate() {\r\n  //   const { movieId } = Number(this.props.match.params.movieId);\r\n  //   console.log(movieId);\r\n  //   const response = await Axios.get(\r\n  //     `${themoviedbAPI.BASE_URL}movie/${movieId}/credits?api_key=${themoviedbAPI.MY_KEY}&language=en-US`,\r\n  //   );\r\n  //   this.setState({ cast: response.data });\r\n  //   console.log(this.state.cast);\r\n  // }\r\n\r\n  render() {\r\n    const { cast } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <ul className=\"CastGallery\">\r\n          {cast.length > 0 ? (\r\n            cast.map(({ name, profile_path, character, cast_id }) => (\r\n              <li className=\"ImageGalleryItem\" key={cast_id}>\r\n                <img\r\n                  src={\r\n                    profile_path\r\n                      ? `${themoviedbAPI.IMG_URL}${profile_path}`\r\n                      : `${themoviedbAPI.defaultImage}`\r\n                  }\r\n                  alt={name}\r\n                />\r\n                <p>{name}</p>\r\n                <p>Character: {character}</p>\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <p>We don't have any cast for this movie</p>\r\n          )}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cast;\r\n","import React from 'react';\r\n\r\nconst Reviews = () => {\r\n  // .finally(() => {\r\n  // \twindow.scrollTo({\r\n  // \t\ttop: document.documentElement.scrollHeight,\r\n  // \t\tbehavior: 'smooth',\r\n  // \t});\r\n  // });\r\n  return <h1>Reviews</h1>;\r\n};\r\n\r\nexport default Reviews;\r\n","import React, { Component } from 'react';\r\nimport { Route, NavLink } from 'react-router-dom';\r\nimport Cast from '../components/Cast';\r\nimport Reviews from '../components/Reviews';\r\nimport themoviedbAPI from '../services/apiService';\r\nimport Axios from 'axios';\r\n// import { MY_KEY, BASE_URL } from '../services/apiService';\r\n// import Spinner from '../components/Spinner/Spinner';\r\n// import { toast } from 'react-toastify';\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    backdrop_path: '',\r\n    genres: [],\r\n    overview: '',\r\n    release_date: '',\r\n    title: '',\r\n    name: '',\r\n    vote_average: null,\r\n    movie: null,\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loading: true });\r\n    console.log(Number(this.props.match.params.movieId));\r\n\r\n    const { movieId } = this.props.match.params;\r\n    // const BASE_URL = `https://api.themoviedb.org/3/`;\r\n    // const MY_KEY = `66acb4573ba980ae8ac5981a52e8de6b`;\r\n\r\n    const response = await Axios.get(\r\n      `${themoviedbAPI.BASE_URL}movie/${movieId}?api_key=${themoviedbAPI.MY_KEY}&language=en-US`,\r\n    );\r\n    this.setState({ ...response.data });\r\n    // console.log(response.data);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      backdrop_path,\r\n      genres,\r\n      overview,\r\n      release_date,\r\n      title,\r\n      name,\r\n      vote_average,\r\n      movie,\r\n      // loading,\r\n      // error,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Card\">\r\n          <img\r\n            src={\r\n              backdrop_path\r\n                ? `${themoviedbAPI.IMG_URL}${backdrop_path}`\r\n                : `${themoviedbAPI.defaultImage}`\r\n            }\r\n            alt={title || name}\r\n          />\r\n\r\n          <div className=\"CardInfo\">\r\n            <h1>{title || name}</h1>\r\n            {vote_average > 0 && (\r\n              <p>\r\n                <span className=\"Title\">User Score: </span>\r\n                {vote_average * 10}%\r\n              </p>\r\n            )}\r\n\r\n            {release_date && (\r\n              <p>\r\n                <span className=\"Title\">Release date: </span>\r\n                {release_date}\r\n              </p>\r\n            )}\r\n            {overview && (\r\n              <>\r\n                <h2>Overview</h2>\r\n                <p>{overview}</p>\r\n              </>\r\n            )}\r\n\r\n            {genres !== null && (\r\n              <>\r\n                <h2>Genres</h2>\r\n                <ul className=\"Genres\">\r\n                  {genres.map(({ id, name }) => (\r\n                    <li key={id} className=\"GenresItem\">\r\n                      {name}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              exact\r\n              to={`${this.props.match.url}/cast`}\r\n              className=\"NavLink\"\r\n              activeClassName=\"NavLink--active\"\r\n            >\r\n              Cast\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              exact\r\n              // to=\"/movies/:movieId/reviews\"\r\n              to={`${this.props.match.path}/reviews`}\r\n              className=\"NavLink\"\r\n              activeClassName=\"NavLink--active\"\r\n            >\r\n              Reviews\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n\r\n        {/* <Switch> */}\r\n        {/* <Route path=\"/movies/:movieId/cast\" component={Cast} /> */}\r\n        <Route\r\n          path={`${this.props.match.path}/cast`}\r\n          render={props => (\r\n            <Cast {...props} movieId={this.props.match.params.movieId} />\r\n          )}\r\n        />\r\n        {/* <Route path=\"/movies/:movieId/reviews\" component={Reviews} /> */}\r\n        <Route path={`${this.props.match.path}/reviews`} component={Reviews} />\r\n        {/* </Switch> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n","import React from 'react';\n// import { ToastContainer } from 'react-toastify';\nimport './App.css';\n// import Searchbar from './components/Searchbar';\n// import ImageGallery from './components/ImageGallery';\nimport { Route, NavLink, Switch } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport MoviesPage from './pages/MoviesPage';\nimport MovieDetailsPage from './pages/MovieDetailsPage';\n// import NotFoundPage from './pages/NotFoundPage';\n\nconst App = () => (\n  <>\n    <ul>\n      <li>\n        <NavLink\n          exact\n          to=\"/\"\n          className=\"NavLink\"\n          activeClassName=\"NavLink--active\"\n        >\n          Home\n        </NavLink>\n      </li>\n      <li>\n        <NavLink\n          exact\n          to=\"/movies\"\n          className=\"NavLink\"\n          activeClassName=\"NavLink--active\"\n        >\n          Movies search\n        </NavLink>\n      </li>\n      <li>\n        <NavLink\n          exact\n          to=\"/movies/:movieId\"\n          className=\"NavLink\"\n          activeClassName=\"NavLink--active\"\n        >\n          Movie Details Page\n        </NavLink>\n      </li>\n    </ul>\n\n    <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route path=\"/movies/:movieId\" component={MovieDetailsPage} />\n      <Route exact path=\"/movies\" component={MoviesPage} />\n\n      <Route component={HomePage} />\n    </Switch>\n  </>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/styles/base.scss';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}